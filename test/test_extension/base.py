from __future__ import absolute_import

import unittest
import json
import math
import os
from esp_sdk.configuration import Configuration

c = Configuration()
os.environ['ESP_ENV'] = 'test'
c.access_key_id = 'abc'
c.secret_access_key = '345'

class TestBase(unittest.TestCase):
    import esp_sdk as esp_sdk
    import json as json
    from mock import Mock as mock

    def active_record_error_response(self):
        return json.dumps({"errors": [{"status": "401", "title": "Name can't be blank", "meta": {"name": "can't be blank"}}, {"status": "401", "title": "Name is invalid", "meta": {"name": "is invalid"}}, {"status": "401", "title": "Description can't be blank", "meta": {"description": "can't be blank"}}]})

    def organization_response(self):
        return json.dumps({"included": None, "data": {"id": 1, "type": "organizations", "relationships": {"sub_organizations": {"data": [{"type": "sub_organizations", "id": "24"}, {"type": "sub_organizations", "id": "2"}], "links": {"related": "http://localhost:3000/api/v2/sub_organizations.json?filter%5Borganization_id_eq%5D=2"}}, "teams": {"data": [{"type": "teams", "id": "2"}, {"type": "teams", "id": "20"}, {"type": "teams", "id": "21"}], "links": {"related": "http://localhost:3000/api/v2/teams.json?filter%5Borganization_id_eq%5D=2"}}}, "attributes": {"created_at": "2017-03-13 11:44:31 -0400", "name": "Test Org", "updated_at": "2017-03-13 11:44:31 -0400"}}})

    def alert_response(self):
        return json.dumps({"included": [{"id": "1015", "type": "external_accounts", "attributes": {"account": "5", "arn": "arn:aws:iam::5:role/test_sts_role", "created_at": "2015-09-11T21:12:15.183Z", "external_id": "test_sts_external_id_1", "name": None, "updated_at": None, "user_attribution_role": None}, "relationships": {"organization": {"data": {"type": "organizations", "id": "5"}, "links": {"related": "http://test.host/api/v2/organizations/5.json"}}, "sub_organization": {"data": {"type": "sub_organizations", "id": "5"}, "links": {"related": "http://test.host/api/v2/sub_organizations/5.json"}}, "team": {"data": {"type": "teams", "id": "5"}, "links": {"related": "http://test.host/api/v2/teams/5.json"}}, "user_attribution_role": {"data": None}}}, {"id": "5", "type": "teams", "name": "Default Team", "created_at": "2015-09-11T21:12:15.183Z", "updated_at": "2015-09-11T21:12:15.183Z", "relationships": {"sub_organization": {"data": {"type": "sub_organizations", "id": "5"}, "links": {"related": "http://localhost:3000/api/v2/sub_organizations/2.json"}}, "organization": {"data": {"type": "organizations", "id": "5"}, "links": {"related": "http://localhost:3000/api/v2/organizations/2.json"}}}}, {"id": "5", "type": "organizations", "created_at": "2015-09-11T21:12:15.183Z", "name": "Test Org", "updated_at": "2015-09-11T21:12:15.183Z", "relationships": {"sub_organizations": {"data": [{"type": "sub_organizations", "id": "24"}, {"type": "sub_organizations", "id": "2"}], "links": {"related": "http://localhost:3000/api/v2/sub_organizations.json?filter%5Borganization_id_eq%5D=2"}}, "teams": {"data": [{"type": "teams", "id": "2"}, {"type": "teams", "id": "20"}, {"type": "teams", "id": "21"}], "links": {"related": "http://localhost:3000/api/v2/teams.json?filter%5Borganization_id_eq%5D=2"}}}}, {"id": "1014", "type": "regions", "attributes": {"code": "us_east_test_3"}}, {"id": "1013", "type": "signatures", "attributes": {"created_at": "2015-09-11T21:12:15.192Z", "description": "\"Some description for some test\"", "identifier": "3 Unique ID", "name": "3_test_signature", "resolution": "\"Turn on some setting\"", "risk_level": "High", "updated_at": None}, "relationships": {"service": {"data": {"type": "services", "id": "3"}, "links": {"related": "http://test.host/api/v2/services/3.json"}}}}, {"id": "1", "type": "cloud_trail_events", "attributes": {"event_id": "1", "event_name": "1", "event_time": "2015-09-11T21:12:14.661Z", "username": "johndoe", "ip_address": "123.0.0.123", "user_agent": "Chrome"}}, {"id": "1", "type": "suppressions", "attributes": {"created_at": "2015-10-16T18:34:19.464Z", "reason": "I dont like this", "status": "setup", "updated_at": "2015-10-16T18:34:19.464Z", "configuration": {"suppression_type": "regions", "resource": None, "regions": [{"id": "4", "type": "regions", "attributes": {"code": "us_east_test_4"}}], "external_accounts": []}}, "relationships": {"organization": {"data": {"id": "4", "type": "organizations"}, "links": {"related": "http://test.host/api/v2/organizations/4.json"}}, "created_by": {"data": {"id": "1", "type": "users"}, "links": {"related": "http://test.host/api/v2/users/1.json"}}}}, {"id": "1", "type": "tags", "attributes": {"key": "Name", "value": "abc123", "created_at": "2015-10-16T18:34:19.569Z", "updated_at": "2015-10-16T18:34:19.569Z"}}, {"id": "2", "type": "tags", "attributes": {"key": "Name", "value": "abc123", "created_at": "2015-10-16T18:34:19.571Z", "updated_at": "2015-10-16T18:34:19.571Z"}}], "data": {"id": 1, "type": "alerts", "relationships": {"external_account": {"data": {"type": "external_accounts", "id": "1015"}, "links": {"related": "http://test.host/api/v2/external_accounts/1015.json"}}, "region": {"data": {"type": "regions", "id": "1014"}}, "signature": {"data": {"type": "signatures", "id": "1013"}, "links": {"related": "http://test.host/api/v2/signatures/1013.json"}}, "custom_signature": {"data": None}, "suppression": {"data": {"id": "1", "type": "suppressions"}, "links": {"related": "http://test.host/api/v2/suppressions/1.json"}}, "metadata": {"links": {"related": "http://test.host/api/v2/alerts/1017/metadata.json"}}, "cloud_trail_events": {"data": [{"type": "cloud_trail_events", "id": "1"}], "links": {"related": "http://test.host/api/v2/alerts/1017/cloud_trail_events.json"}}, "tags": {"data": [{"id": "1", "type": "tags"}, {"id": "2", "type": "tags"}]}}, "attributes": {"created_at": "2017-03-13 10:03:08 -0400", "status": "fail", "resource": "resource-3", "updated_at": None, "started_at": "2017-03-13 10:03:08 -0400", "ended_at": None}}})

    def dashboard_response(self):
        return json.dumps({"data": {"id": "2", "type": "dashboard_reports", "attributes": {"created_at": "2017-07-28T15:56:40.000Z", "updated_at": "2017-07-28T15:56:40.000Z"}, "relationships": {"stat": {"data": {"id": "2", "type": "dashboard_stats"}, "links": {"related": "http://test.host/api/v2/stats/2.json"}}, "external_account": {"data": {"id": "2", "type": "external_accounts"}, "links": {"related": "http://test.host/api/v2/external_accounts/2.json"}}, "team": {"data": {"id": "3", "type": "teams"}, "links": {"related": "http://test.host/api/v2/teams/3.json"}}}}, "included": [{"id": "2", "type": "dashboard_stats", "attributes": {"total": 68, "stat_services": [{"service": {"id": 8, "name": "SSS", "policy_name": "s6"}, "total_pass": 14, "total_fail": 10, "total_warn": 11, "total_error": 9, "total_info": 10, "total_new_1h": 27, "total_new_1d": 30, "total_new_1d_pass": 10, "total_new_1d_fail": 4, "total_new_1d_warn": 1, "total_new_1d_error": 10, "total_new_1d_info": 5}], "stat_regions": [{"region": {"id": 2, "code": "us_east_test_2"}, "region_id": 2, "total_pass": 18, "total_fail": 18, "total_warn": 16, "total_error": 17, "total_info": 6, "total_high": 27, "total_medium": 26, "total_low": 22, "total_high_fail": 8, "total_high_error": 7, "total_high_warn": 6, "total_high_pass": 6, "total_high_info": 0, "total_medium_fail": 6, "total_medium_error": 5, "total_medium_warn": 6, "total_medium_pass": 7, "total_medium_info": 2, "total_low_fail": 4, "total_low_error": 5, "total_low_warn": 4, "total_low_pass": 5, "total_low_info": 4, "total_new_1h_high": 6, "total_new_1h_medium": 6, "total_new_1h_low": 9, "total_new_1d_high": 11, "total_new_1d_medium": 5, "total_new_1d_low": 12, "total_new_1d_pass": 9, "total_new_1d_fail": 7, "total_new_1d_warn": 6, "total_new_1d_error": 8, "total_new_1d_info": 7, "new_1d_high_fail": 3, "new_1d_high_error": 4, "new_1d_high_warn": 1, "new_1d_high_pass": 4, "new_1d_high_info": 3, "new_1d_medium_fail": 0, "new_1d_medium_error": 2, "new_1d_medium_warn": 3, "new_1d_medium_pass": 2, "new_1d_medium_info": 0, "new_1d_low_fail": 4, "new_1d_low_error": 2, "new_1d_low_warn": 2, "new_1d_low_pass": 3, "new_1d_low_info": 4}], "stat_compliance_controls": [{"compliance_control": {"id": 2, "name": "Control name 3", "compliance_standard": {"name": "Standard 3", "created_at": "2017-07-28T15:56:40.000Z", "id": 3, "description": "Standard description 3", "updated_at": "2017-07-28T15:56:40.000Z"}, "compliance_domain": {"id": 3, "identifier": "3", "name": "Domain name 3", "created_at": "2017-07-28T15:56:40.000Z", "updated_at": "2017-07-28T15:56:40.000Z", "position": 1}, "signatures": []}, "pass": 3, "fail": 0}]}}, {"id": "2", "type": "external_accounts", "attributes": {"created_at": "2017-07-28T15:56:40.000Z", "name": "Account 2", "updated_at": "2017-07-28T15:56:40.000Z", "provider": "amazon", "arn": "arn:aws:iam::2:role/test_sts_role", "account": "2", "external_id": "test_sts_external_id_1", "cloudtrail_name": None}, "relationships": {"organization": {"links": {"related": "http://test.host/api/v2/organizations/3.json"}}, "sub_organization": {"links": {"related": "http://test.host/api/v2/sub_organizations/3.json"}}, "team": {"links": {"related": "http://test.host/api/v2/teams/3.json"}}, "scan_intervals": {"links": {"related": "http://test.host/api/v2/external_accounts/2/scan_intervals.json"}}, "disabled_signatures": {"links": {"related": "http://test.host/api/v2/external_accounts/2/disabled_signatures.json"}}, "credentials": {"links": {"related": "http://test.host/api/v2/external_accounts/2/amazon.json"}}}}, {"id": "3", "type": "teams", "attributes": {"name": "Operations 3", "created_at": "2017-07-28T15:56:40.000Z", "updated_at": "2017-07-28T15:56:40.000Z"}, "relationships": {"custom_signatures": {"links": {"related": "http://test.host/api/v2/custom_signatures.json?filter%5Bteam_id_eq%5D=3"}}, "external_accounts": {"links": {"related": "http://test.host/api/v2/external_accounts.json?filter%5Bteam_id_eq%5D=3"}}, "organization": {"links": {"related": "http://test.host/api/v2/organizations/3.json"}}, "sub_organization": {"links": {"related": "http://test.host/api/v2/sub_organizations/3.json"}}}}]})

    # helper to form the correct object when getting a collection of objects
    def json_list(self, json_array, page_args=None):
        page_args = page_args or {'page': {'number': 1, 'size': 20}}
        data = [json.loads(j)['data'] for j in json_array]
        links = self._build_links(data, page_args['page'])
        list = {'data': data[0:page_args['page']['size']],
                "links": links}
        if json_array[0]:
            list['included'] = json.loads(json_array[0]).get('included', None)
        return json.dumps(list)

    def _build_links(self, data, page):
        current_page = page['number']
        last_page = math.ceil(float(len(data)) / page['size'])
        links = {"self": "http://localhost:3000/api/v2/not_the_real_url/but_useful_for_testing.json?page%5Bnumber%5D={0}&page%5Bsize%5D={1}".format(current_page, page['size'])}
        if current_page != 1:
            links["prev"] = "http://localhost:3000/api/v2/not_the_real_url/but_useful_for_testing.json?page%5Bnumber%5D={0}&page%5Bsize%5D={1}".format(current_page - 1, page['size'])
        if current_page != last_page:
            links["next"] = "http://localhost:3000/api/v2/not_the_real_url/but_useful_for_testing.json?page%5Bnumber%5D={0}&page%5Bsize%5D={1}".format(current_page + 1, page['size'])
            links["last"] = "http://localhost:3000/api/v2/not_the_real_url/but_useful_for_testing.json?page%5Bnumber%5D={0}&page%5Bsize%5D={1}".format(last_page, page['size'])
        return links
