# coding: utf-8

"""
    ESP Documentation

    The Evident Security Platform API (version 2.0) is designed to allow users granular control over their Amazon Web Service security experience by allowing them to review alerts, monitor signatures, and create custom signatures.

    OpenAPI spec version: v2_sdk
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
from ..extensions.base_object import BaseObject
import re


class CustomComplianceStandard(BaseObject):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, id=None, organization_id=None, name=None, created_at=None, description=None, updated_at=None, max_accounts=None, max_domains=None, max_controls=None, custom_compliance_domains=None, custom_compliance_domain_ids=None, custom_compliance_controls=None, custom_compliance_control_ids=None):
        """
        CustomComplianceStandard - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'organization_id': 'int',
            'name': 'str',
            'created_at': 'datetime',
            'description': 'str',
            'updated_at': 'datetime',
            'max_accounts': 'int',
            'max_domains': 'int',
            'max_controls': 'int',
            'custom_compliance_domains': 'list[CustomComplianceDomain]',
            'custom_compliance_domain_ids': 'list[int]',
            'custom_compliance_controls': 'list[CustomComplianceControl]',
            'custom_compliance_control_ids': 'list[int]'
        }

        self.attribute_map = {
            'id': 'id',
            'organization_id': 'organization_id',
            'name': 'name',
            'created_at': 'created_at',
            'description': 'description',
            'updated_at': 'updated_at',
            'max_accounts': 'max_accounts',
            'max_domains': 'max_domains',
            'max_controls': 'max_controls',
            'custom_compliance_domains': 'custom_compliance_domains',
            'custom_compliance_domain_ids': 'custom_compliance_domain_ids',
            'custom_compliance_controls': 'custom_compliance_controls',
            'custom_compliance_control_ids': 'custom_compliance_control_ids'
        }

        self._id = id
        self._organization_id = organization_id
        self._name = name
        self._created_at = created_at
        self._description = description
        self._updated_at = updated_at
        self._max_accounts = max_accounts
        self._max_domains = max_domains
        self._max_controls = max_controls
        self._custom_compliance_domains = custom_compliance_domains
        self._custom_compliance_domain_ids = custom_compliance_domain_ids
        self._custom_compliance_controls = custom_compliance_controls
        self._custom_compliance_control_ids = custom_compliance_control_ids

    @property
    def id(self):
        """
        Gets the id of this CustomComplianceStandard.
        Unique ID

        :return: The id of this CustomComplianceStandard.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this CustomComplianceStandard.
        Unique ID

        :param id: The id of this CustomComplianceStandard.
        :type: int
        """

        self._id = id

    @property
    def organization_id(self):
        """
        Gets the organization_id of this CustomComplianceStandard.
        The ID of the organization this custom compliance standard belongs to

        :return: The organization_id of this CustomComplianceStandard.
        :rtype: int
        """
        return self._organization_id

    @organization_id.setter
    def organization_id(self, organization_id):
        """
        Sets the organization_id of this CustomComplianceStandard.
        The ID of the organization this custom compliance standard belongs to

        :param organization_id: The organization_id of this CustomComplianceStandard.
        :type: int
        """

        self._organization_id = organization_id

    @property
    def name(self):
        """
        Gets the name of this CustomComplianceStandard.
        Name

        :return: The name of this CustomComplianceStandard.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this CustomComplianceStandard.
        Name

        :param name: The name of this CustomComplianceStandard.
        :type: str
        """

        self._name = name

    @property
    def created_at(self):
        """
        Gets the created_at of this CustomComplianceStandard.
        ISO 8601 timestamp when the resource was created

        :return: The created_at of this CustomComplianceStandard.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """
        Sets the created_at of this CustomComplianceStandard.
        ISO 8601 timestamp when the resource was created

        :param created_at: The created_at of this CustomComplianceStandard.
        :type: datetime
        """

        self._created_at = created_at

    @property
    def description(self):
        """
        Gets the description of this CustomComplianceStandard.
        The description for this Compliance Standard

        :return: The description of this CustomComplianceStandard.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this CustomComplianceStandard.
        The description for this Compliance Standard

        :param description: The description of this CustomComplianceStandard.
        :type: str
        """

        self._description = description

    @property
    def updated_at(self):
        """
        Gets the updated_at of this CustomComplianceStandard.
        ISO 8601 timestamp when the resource was updated

        :return: The updated_at of this CustomComplianceStandard.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """
        Sets the updated_at of this CustomComplianceStandard.
        ISO 8601 timestamp when the resource was updated

        :param updated_at: The updated_at of this CustomComplianceStandard.
        :type: datetime
        """

        self._updated_at = updated_at

    @property
    def max_accounts(self):
        """
        Gets the max_accounts of this CustomComplianceStandard.
        The maximum number of external accounts that can be added to the custom compliance standard

        :return: The max_accounts of this CustomComplianceStandard.
        :rtype: int
        """
        return self._max_accounts

    @max_accounts.setter
    def max_accounts(self, max_accounts):
        """
        Sets the max_accounts of this CustomComplianceStandard.
        The maximum number of external accounts that can be added to the custom compliance standard

        :param max_accounts: The max_accounts of this CustomComplianceStandard.
        :type: int
        """

        self._max_accounts = max_accounts

    @property
    def max_domains(self):
        """
        Gets the max_domains of this CustomComplianceStandard.
        The maximum number of custom compliance domains that can be added to the custom compliance standard

        :return: The max_domains of this CustomComplianceStandard.
        :rtype: int
        """
        return self._max_domains

    @max_domains.setter
    def max_domains(self, max_domains):
        """
        Sets the max_domains of this CustomComplianceStandard.
        The maximum number of custom compliance domains that can be added to the custom compliance standard

        :param max_domains: The max_domains of this CustomComplianceStandard.
        :type: int
        """

        self._max_domains = max_domains

    @property
    def max_controls(self):
        """
        Gets the max_controls of this CustomComplianceStandard.
        The maximum number of custom compliance controls that can be added to the custom compliance standard

        :return: The max_controls of this CustomComplianceStandard.
        :rtype: int
        """
        return self._max_controls

    @max_controls.setter
    def max_controls(self, max_controls):
        """
        Sets the max_controls of this CustomComplianceStandard.
        The maximum number of custom compliance controls that can be added to the custom compliance standard

        :param max_controls: The max_controls of this CustomComplianceStandard.
        :type: int
        """

        self._max_controls = max_controls

    @property
    def custom_compliance_domains(self):
        """
        Gets the custom_compliance_domains of this CustomComplianceStandard.
        Associated Custom Compliance Domains

        :return: The custom_compliance_domains of this CustomComplianceStandard.
        :rtype: list[CustomComplianceDomain]
        """
        return self._custom_compliance_domains

    @custom_compliance_domains.setter
    def custom_compliance_domains(self, custom_compliance_domains):
        """
        Sets the custom_compliance_domains of this CustomComplianceStandard.
        Associated Custom Compliance Domains

        :param custom_compliance_domains: The custom_compliance_domains of this CustomComplianceStandard.
        :type: list[CustomComplianceDomain]
        """

        self._custom_compliance_domains = custom_compliance_domains

    @property
    def custom_compliance_domain_ids(self):
        """
        Gets the custom_compliance_domain_ids of this CustomComplianceStandard.
        Associated Custom Compliance Domains IDs

        :return: The custom_compliance_domain_ids of this CustomComplianceStandard.
        :rtype: list[int]
        """
        return self._custom_compliance_domain_ids

    @custom_compliance_domain_ids.setter
    def custom_compliance_domain_ids(self, custom_compliance_domain_ids):
        """
        Sets the custom_compliance_domain_ids of this CustomComplianceStandard.
        Associated Custom Compliance Domains IDs

        :param custom_compliance_domain_ids: The custom_compliance_domain_ids of this CustomComplianceStandard.
        :type: list[int]
        """

        self._custom_compliance_domain_ids = custom_compliance_domain_ids

    @property
    def custom_compliance_controls(self):
        """
        Gets the custom_compliance_controls of this CustomComplianceStandard.
        Associated Custom Compliance Controls

        :return: The custom_compliance_controls of this CustomComplianceStandard.
        :rtype: list[CustomComplianceControl]
        """
        return self._custom_compliance_controls

    @custom_compliance_controls.setter
    def custom_compliance_controls(self, custom_compliance_controls):
        """
        Sets the custom_compliance_controls of this CustomComplianceStandard.
        Associated Custom Compliance Controls

        :param custom_compliance_controls: The custom_compliance_controls of this CustomComplianceStandard.
        :type: list[CustomComplianceControl]
        """

        self._custom_compliance_controls = custom_compliance_controls

    @property
    def custom_compliance_control_ids(self):
        """
        Gets the custom_compliance_control_ids of this CustomComplianceStandard.
        Associated Custom Compliance Controls IDs

        :return: The custom_compliance_control_ids of this CustomComplianceStandard.
        :rtype: list[int]
        """
        return self._custom_compliance_control_ids

    @custom_compliance_control_ids.setter
    def custom_compliance_control_ids(self, custom_compliance_control_ids):
        """
        Sets the custom_compliance_control_ids of this CustomComplianceStandard.
        Associated Custom Compliance Controls IDs

        :param custom_compliance_control_ids: The custom_compliance_control_ids of this CustomComplianceStandard.
        :type: list[int]
        """

        self._custom_compliance_control_ids = custom_compliance_control_ids

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, CustomComplianceStandard):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
