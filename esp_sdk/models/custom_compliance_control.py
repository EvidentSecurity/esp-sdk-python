# coding: utf-8

"""
    ESP Documentation

    The Evident Security Platform API (version 2.0) is designed to allow users granular control over their Amazon Web Service security experience by allowing them to review alerts, monitor signatures, and create custom signatures.

    OpenAPI spec version: v2_sdk
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
from ..extensions.base_object import BaseObject
import re


class CustomComplianceControl(BaseObject):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, id=None, name=None, identifier=None, description=None, created_at=None, updated_at=None, position=None, custom_compliance_standard=None, custom_compliance_standard_id=None, custom_compliance_domain=None, custom_compliance_domain_id=None, signatures=None, custom_signatures=None):
        """
        CustomComplianceControl - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'name': 'str',
            'identifier': 'str',
            'description': 'str',
            'created_at': 'datetime',
            'updated_at': 'datetime',
            'position': 'int',
            'custom_compliance_standard': 'CustomComplianceStandard',
            'custom_compliance_standard_id': 'int',
            'custom_compliance_domain': 'CustomComplianceDomain',
            'custom_compliance_domain_id': 'int',
            'signatures': 'list[Signature]',
            'custom_signatures': 'list[CustomSignature]'
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'identifier': 'identifier',
            'description': 'description',
            'created_at': 'created_at',
            'updated_at': 'updated_at',
            'position': 'position',
            'custom_compliance_standard': 'custom_compliance_standard',
            'custom_compliance_standard_id': 'custom_compliance_standard_id',
            'custom_compliance_domain': 'custom_compliance_domain',
            'custom_compliance_domain_id': 'custom_compliance_domain_id',
            'signatures': 'signatures',
            'custom_signatures': 'custom_signatures'
        }

        self._id = id
        self._name = name
        self._identifier = identifier
        self._description = description
        self._created_at = created_at
        self._updated_at = updated_at
        self._position = position
        self._custom_compliance_standard = custom_compliance_standard
        self._custom_compliance_standard_id = custom_compliance_standard_id
        self._custom_compliance_domain = custom_compliance_domain
        self._custom_compliance_domain_id = custom_compliance_domain_id
        self._signatures = signatures
        self._custom_signatures = custom_signatures

    @property
    def id(self):
        """
        Gets the id of this CustomComplianceControl.
        Unique ID

        :return: The id of this CustomComplianceControl.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this CustomComplianceControl.
        Unique ID

        :param id: The id of this CustomComplianceControl.
        :type: int
        """

        self._id = id

    @property
    def name(self):
        """
        Gets the name of this CustomComplianceControl.
        Name

        :return: The name of this CustomComplianceControl.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this CustomComplianceControl.
        Name

        :param name: The name of this CustomComplianceControl.
        :type: str
        """

        self._name = name

    @property
    def identifier(self):
        """
        Gets the identifier of this CustomComplianceControl.
        The identifier of this custom control

        :return: The identifier of this CustomComplianceControl.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """
        Sets the identifier of this CustomComplianceControl.
        The identifier of this custom control

        :param identifier: The identifier of this CustomComplianceControl.
        :type: str
        """

        self._identifier = identifier

    @property
    def description(self):
        """
        Gets the description of this CustomComplianceControl.
        The description for this custom control

        :return: The description of this CustomComplianceControl.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this CustomComplianceControl.
        The description for this custom control

        :param description: The description of this CustomComplianceControl.
        :type: str
        """

        self._description = description

    @property
    def created_at(self):
        """
        Gets the created_at of this CustomComplianceControl.
        ISO 8601 timestamp when the resource was created

        :return: The created_at of this CustomComplianceControl.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """
        Sets the created_at of this CustomComplianceControl.
        ISO 8601 timestamp when the resource was created

        :param created_at: The created_at of this CustomComplianceControl.
        :type: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """
        Gets the updated_at of this CustomComplianceControl.
        ISO 8601 timestamp when the resource was updated

        :return: The updated_at of this CustomComplianceControl.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """
        Sets the updated_at of this CustomComplianceControl.
        ISO 8601 timestamp when the resource was updated

        :param updated_at: The updated_at of this CustomComplianceControl.
        :type: datetime
        """

        self._updated_at = updated_at

    @property
    def position(self):
        """
        Gets the position of this CustomComplianceControl.
        The position of this custom control within the custom domain

        :return: The position of this CustomComplianceControl.
        :rtype: int
        """
        return self._position

    @position.setter
    def position(self, position):
        """
        Sets the position of this CustomComplianceControl.
        The position of this custom control within the custom domain

        :param position: The position of this CustomComplianceControl.
        :type: int
        """

        self._position = position

    @property
    def custom_compliance_standard(self):
        """
        Gets the custom_compliance_standard of this CustomComplianceControl.
        Associated Custom Compliance Standard

        :return: The custom_compliance_standard of this CustomComplianceControl.
        :rtype: CustomComplianceStandard
        """
        return self._custom_compliance_standard

    @custom_compliance_standard.setter
    def custom_compliance_standard(self, custom_compliance_standard):
        """
        Sets the custom_compliance_standard of this CustomComplianceControl.
        Associated Custom Compliance Standard

        :param custom_compliance_standard: The custom_compliance_standard of this CustomComplianceControl.
        :type: CustomComplianceStandard
        """

        self._custom_compliance_standard = custom_compliance_standard

    @property
    def custom_compliance_standard_id(self):
        """
        Gets the custom_compliance_standard_id of this CustomComplianceControl.
        Associated Custom Compliance Standard ID

        :return: The custom_compliance_standard_id of this CustomComplianceControl.
        :rtype: int
        """
        return self._custom_compliance_standard_id

    @custom_compliance_standard_id.setter
    def custom_compliance_standard_id(self, custom_compliance_standard_id):
        """
        Sets the custom_compliance_standard_id of this CustomComplianceControl.
        Associated Custom Compliance Standard ID

        :param custom_compliance_standard_id: The custom_compliance_standard_id of this CustomComplianceControl.
        :type: int
        """

        self._custom_compliance_standard_id = custom_compliance_standard_id

    @property
    def custom_compliance_domain(self):
        """
        Gets the custom_compliance_domain of this CustomComplianceControl.
        Associated Custom Compliance Domain

        :return: The custom_compliance_domain of this CustomComplianceControl.
        :rtype: CustomComplianceDomain
        """
        return self._custom_compliance_domain

    @custom_compliance_domain.setter
    def custom_compliance_domain(self, custom_compliance_domain):
        """
        Sets the custom_compliance_domain of this CustomComplianceControl.
        Associated Custom Compliance Domain

        :param custom_compliance_domain: The custom_compliance_domain of this CustomComplianceControl.
        :type: CustomComplianceDomain
        """

        self._custom_compliance_domain = custom_compliance_domain

    @property
    def custom_compliance_domain_id(self):
        """
        Gets the custom_compliance_domain_id of this CustomComplianceControl.
        Associated Custom Compliance Domain ID

        :return: The custom_compliance_domain_id of this CustomComplianceControl.
        :rtype: int
        """
        return self._custom_compliance_domain_id

    @custom_compliance_domain_id.setter
    def custom_compliance_domain_id(self, custom_compliance_domain_id):
        """
        Sets the custom_compliance_domain_id of this CustomComplianceControl.
        Associated Custom Compliance Domain ID

        :param custom_compliance_domain_id: The custom_compliance_domain_id of this CustomComplianceControl.
        :type: int
        """

        self._custom_compliance_domain_id = custom_compliance_domain_id

    @property
    def signatures(self):
        """
        Gets the signatures of this CustomComplianceControl.
        Associated Signatures

        :return: The signatures of this CustomComplianceControl.
        :rtype: list[Signature]
        """
        return self._signatures

    @signatures.setter
    def signatures(self, signatures):
        """
        Sets the signatures of this CustomComplianceControl.
        Associated Signatures

        :param signatures: The signatures of this CustomComplianceControl.
        :type: list[Signature]
        """

        self._signatures = signatures

    @property
    def custom_signatures(self):
        """
        Gets the custom_signatures of this CustomComplianceControl.
        Associated Custom Signatures

        :return: The custom_signatures of this CustomComplianceControl.
        :rtype: list[CustomSignature]
        """
        return self._custom_signatures

    @custom_signatures.setter
    def custom_signatures(self, custom_signatures):
        """
        Sets the custom_signatures of this CustomComplianceControl.
        Associated Custom Signatures

        :param custom_signatures: The custom_signatures of this CustomComplianceControl.
        :type: list[CustomSignature]
        """

        self._custom_signatures = custom_signatures

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, CustomComplianceControl):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
